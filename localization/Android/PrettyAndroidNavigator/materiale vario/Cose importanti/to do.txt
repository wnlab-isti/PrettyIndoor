--- TODO
-> Implementare PositionFilter per FingerprintMap.findNearestK e DistanceMap.findAveragePosition
-> Proiezione punto se con KalmanFilterStrategy scazza (su FloorMap o un'altra classe di quelle)
-> Debug e prove PF
-> Debug e prove KF
-> Far diventare una classe autonoma il PositionDistance
-
-> Bussola si deve ripulire per bene, probabilmente override
-> Refactoring
    - Check eccezioni (soprattutto fingerprint)
    - Lavorare con XYPosition quando non conosco il piano (cioè quasi sempre)
    - Il past participle di split è split, non splitted
-> capire Step Detection (implementazione & teoria)
-> Fare service
-> Distinguere tra: librerie java, librerie android, app android e validare (1h)
-> Documentazione
-> Validazione e check warnings
-
-> UML e readme.txt
- 26/03

-> Campagna EvAAL-like
- 27/03

--- TODO WHAT
Requisiti app Android:
    - IndoorLocalization con IndoorService (che usa la liba e libj)
    - Mappa grafica (semplice, ma tanto la devo fare per il PF)

Lib android:
    - Handlers
    - Service
    - Compass
    - Step Detection

Lib java:
    - Localization abstractions (type and strategies)
    - Logger
    - Compass
    - Step Detection
    - Fusion Filters
    - Observer pattern abstractions
    - Types
        -> Simple data types (wifi, sensor data types, ecc...)
        -> Fingerprint

Lib java commons:
    - Localization implementations
        -> You Li - like Kalman Localization Strategy
        -> Particle Filter simple strategy